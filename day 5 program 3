#Given an integer n, return the least number of perfect square numbers that sum to n. A perfect square is an integer that is the square of an integer; in other words, it is the product of some integer with itself. For example, 1, 4, 9, and 16 are perfect squares while 3 and 11 are 
not.
def numSquares(n: int) -> int:
    dp = [i for i in range(n+1)] # Initialize dp array
    
    for i in range(1, n+1):
        # Iterate over all possible perfect squares <= i
        for j in range(1, int(i**0.5)+1):
            square = j*j
            # Update dp[i] if using square reduces the number of perfect squares needed
            dp[i] = min(dp[i], dp[i-square]+1)
            
    return dp[n]

# Take input from the user and call the function
n = int(input("Enter an integer: "))
result = numSquares(n)
print("The least number of perfect squares that sum to", n, "is", result)
